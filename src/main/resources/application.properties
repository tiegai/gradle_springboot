server.port=9088

# 登录用户所在的数据库
spring.data.mongodb.authentication-database=admin

# 数据库的ip地址
spring.data.mongodb.host=127.0.0.1

# MongoDB端口号
spring.data.mongodb.port=27017

# 用户账号
spring.data.mongodb.username=root

# 用户密码
spring.data.mongodb.password=123456

# 指定使用的数据库
# 不必预先创建，不存在该数据库会自动创建
spring.data.mongodb.database=admin


#rabbitMQ
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtualHost=/
##确认消息已发送到交换机(Exchange)
spring.rabbitmq.publisher-confirm-type=correlated
##确认消息已发送到队列(Queue)
spring.rabbitmq.publisher-returns=true
##


#ES
spring:
    elasticsearch:
        uris: http://localhost:9200/


#redis
#redis数据库索引 默认为0
#spring.redis.database=0
#spring.redis.host=127.0.0.1
#spring.redis.port=6379
#spring.redis.password=123456
#连接池最大连接数,使用负值即为不限制
#spring.redis.pool.max-active=8
#连接池最大阻塞等待时间,使用负值即为不限制
#spring.redis.pool.max-wait=-1
#连接池最大空闲数
#spring.redis.pool.max-idle=8

#sharding-config-begin

#æ´åmybatis
mybatis.type-aliases-package=org.example.sharding.mapper
#éç½®æ°æ®æºçåç§°
spring.shardingsphere.datasource.names=ds1
#éç½®æ°æ®æºçå·ä½åå®¹ï¼
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/shard?serverTimezone=UTC
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=123456
#æå®ordersè¡¨çåå¸æåµï¼éç½®è¡¨å¨åªä¸ªæ°æ®åºä¸­ï¼è¡¨åç§°æ¯ä»ä¹
spring.shardingsphere.sharding.tables.orders.actual-data-nodes=ds1.orders_$->{1..2}
#æå®ordersè¡¨éä¸»é®idçæç­ç¥
spring.shardingsphere.sharding.tables.orders.key-generator.column=id
spring.shardingsphere.sharding.tables.orders.key-generator.type=SNOWFLAKE
#æå®åçç­ç¥ãæ ¹æ®idçå¥å¶æ§æ¥å¤æ­æå¥å°åªä¸ªè¡¨
spring.shardingsphere.sharding.tables.orders.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.orders.table-strategy.inline.algorithm-expression=orders_${id%2+1}
#æå¼sqlè¾åºæ¥å¿
spring.shardingsphere.props.sql.show=true

#sharding-config-end




